[{"name":"class MainActivity : ComponentActivity","description":"eu.schk.spezi.MainActivity","location":"app/eu.schk.spezi/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : ComponentActivity","eu.schk.spezi.MainActivity"]},{"name":"constructor()","description":"eu.schk.spezi.MainActivity.MainActivity","location":"app/eu.schk.spezi/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","eu.schk.spezi.MainActivity.MainActivity"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"eu.schk.spezi.MainActivity.onCreate","location":"app/eu.schk.spezi/-main-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","eu.schk.spezi.MainActivity.onCreate"]},{"name":"abstract fun getTaskModels(): List<Task>","description":"eu.schk.task.repository.TaskRepository.getTaskModels","location":"spezi-feature/task/eu.schk.task.repository/-task-repository/get-task-models.html","searchKeys":["getTaskModels","abstract fun getTaskModels(): List<Task>","eu.schk.task.repository.TaskRepository.getTaskModels"]},{"name":"class DefaultTaskRepository : TaskRepository","description":"eu.schk.task.repository.DefaultTaskRepository","location":"spezi-feature/task/eu.schk.task.repository/-default-task-repository/index.html","searchKeys":["DefaultTaskRepository","class DefaultTaskRepository : TaskRepository","eu.schk.task.repository.DefaultTaskRepository"]},{"name":"class TaskItemProvider : PreviewParameterProvider<Task> ","description":"eu.schk.task.component.TaskItemProvider","location":"spezi-feature/task/eu.schk.task.component/-task-item-provider/index.html","searchKeys":["TaskItemProvider","class TaskItemProvider : PreviewParameterProvider<Task> ","eu.schk.task.component.TaskItemProvider"]},{"name":"class TaskScreenViewModel(taskRepository: TaskRepository) : ViewModel","description":"eu.schk.task.TaskScreenViewModel","location":"spezi-feature/task/eu.schk.task/-task-screen-view-model/index.html","searchKeys":["TaskScreenViewModel","class TaskScreenViewModel(taskRepository: TaskRepository) : ViewModel","eu.schk.task.TaskScreenViewModel"]},{"name":"constructor()","description":"eu.schk.task.component.TaskItemProvider.TaskItemProvider","location":"spezi-feature/task/eu.schk.task.component/-task-item-provider/-task-item-provider.html","searchKeys":["TaskItemProvider","constructor()","eu.schk.task.component.TaskItemProvider.TaskItemProvider"]},{"name":"constructor()","description":"eu.schk.task.repository.DefaultTaskRepository.DefaultTaskRepository","location":"spezi-feature/task/eu.schk.task.repository/-default-task-repository/-default-task-repository.html","searchKeys":["DefaultTaskRepository","constructor()","eu.schk.task.repository.DefaultTaskRepository.DefaultTaskRepository"]},{"name":"constructor(taskRepository: TaskRepository)","description":"eu.schk.task.TaskScreenViewModel.TaskScreenViewModel","location":"spezi-feature/task/eu.schk.task/-task-screen-view-model/-task-screen-view-model.html","searchKeys":["TaskScreenViewModel","constructor(taskRepository: TaskRepository)","eu.schk.task.TaskScreenViewModel.TaskScreenViewModel"]},{"name":"constructor(text: String, isChecked: Boolean = false)","description":"eu.schk.task.repository.Task.Task","location":"spezi-feature/task/eu.schk.task.repository/-task/-task.html","searchKeys":["Task","constructor(text: String, isChecked: Boolean = false)","eu.schk.task.repository.Task.Task"]},{"name":"data class Task(val text: String, var isChecked: Boolean = false)","description":"eu.schk.task.repository.Task","location":"spezi-feature/task/eu.schk.task.repository/-task/index.html","searchKeys":["Task","data class Task(val text: String, var isChecked: Boolean = false)","eu.schk.task.repository.Task"]},{"name":"fun TaskCard(taskItem: Task, onItemCheckedChange: (Task) -> Unit)","description":"eu.schk.task.component.TaskCard","location":"spezi-feature/task/eu.schk.task.component/-task-card.html","searchKeys":["TaskCard","fun TaskCard(taskItem: Task, onItemCheckedChange: (Task) -> Unit)","eu.schk.task.component.TaskCard"]},{"name":"fun TaskCardPreview(taskItem: Task)","description":"eu.schk.task.component.TaskCardPreview","location":"spezi-feature/task/eu.schk.task.component/-task-card-preview.html","searchKeys":["TaskCardPreview","fun TaskCardPreview(taskItem: Task)","eu.schk.task.component.TaskCardPreview"]},{"name":"fun TaskScreen(viewModel: TaskScreenViewModel = viewModel())","description":"eu.schk.task.screen.TaskScreen","location":"spezi-feature/task/eu.schk.task.screen/-task-screen.html","searchKeys":["TaskScreen","fun TaskScreen(viewModel: TaskScreenViewModel = viewModel())","eu.schk.task.screen.TaskScreen"]},{"name":"fun TaskScreenPreview()","description":"eu.schk.task.screen.TaskScreenPreview","location":"spezi-feature/task/eu.schk.task.screen/-task-screen-preview.html","searchKeys":["TaskScreenPreview","fun TaskScreenPreview()","eu.schk.task.screen.TaskScreenPreview"]},{"name":"fun toggleTaskItem(item: Task)","description":"eu.schk.task.TaskScreenViewModel.toggleTaskItem","location":"spezi-feature/task/eu.schk.task/-task-screen-view-model/toggle-task-item.html","searchKeys":["toggleTaskItem","fun toggleTaskItem(item: Task)","eu.schk.task.TaskScreenViewModel.toggleTaskItem"]},{"name":"interface TaskRepository","description":"eu.schk.task.repository.TaskRepository","location":"spezi-feature/task/eu.schk.task.repository/-task-repository/index.html","searchKeys":["TaskRepository","interface TaskRepository","eu.schk.task.repository.TaskRepository"]},{"name":"open override fun getTaskModels(): List<Task>","description":"eu.schk.task.repository.DefaultTaskRepository.getTaskModels","location":"spezi-feature/task/eu.schk.task.repository/-default-task-repository/get-task-models.html","searchKeys":["getTaskModels","open override fun getTaskModels(): List<Task>","eu.schk.task.repository.DefaultTaskRepository.getTaskModels"]},{"name":"open override val values: Sequence<Task>","description":"eu.schk.task.component.TaskItemProvider.values","location":"spezi-feature/task/eu.schk.task.component/-task-item-provider/values.html","searchKeys":["values","open override val values: Sequence<Task>","eu.schk.task.component.TaskItemProvider.values"]},{"name":"val taskItems: StateFlow<List<Task>>","description":"eu.schk.task.TaskScreenViewModel.taskItems","location":"spezi-feature/task/eu.schk.task/-task-screen-view-model/task-items.html","searchKeys":["taskItems","val taskItems: StateFlow<List<Task>>","eu.schk.task.TaskScreenViewModel.taskItems"]},{"name":"val text: String","description":"eu.schk.task.repository.Task.text","location":"spezi-feature/task/eu.schk.task.repository/-task/text.html","searchKeys":["text","val text: String","eu.schk.task.repository.Task.text"]},{"name":"var isChecked: Boolean","description":"eu.schk.task.repository.Task.isChecked","location":"spezi-feature/task/eu.schk.task.repository/-task/is-checked.html","searchKeys":["isChecked","var isChecked: Boolean","eu.schk.task.repository.Task.isChecked"]},{"name":"fun SpeziTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = false, content: () -> Unit)","description":"eu.schk.designsystem.SpeziTheme","location":"core/designsystem/eu.schk.designsystem/-spezi-theme.html","searchKeys":["SpeziTheme","fun SpeziTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = false, content: () -> Unit)","eu.schk.designsystem.SpeziTheme"]},{"name":"val Black100: Color","description":"eu.schk.designsystem.Black100","location":"core/designsystem/eu.schk.designsystem/-black100.html","searchKeys":["Black100","val Black100: Color","eu.schk.designsystem.Black100"]},{"name":"val Black10: Color","description":"eu.schk.designsystem.Black10","location":"core/designsystem/eu.schk.designsystem/-black10.html","searchKeys":["Black10","val Black10: Color","eu.schk.designsystem.Black10"]},{"name":"val Black20: Color","description":"eu.schk.designsystem.Black20","location":"core/designsystem/eu.schk.designsystem/-black20.html","searchKeys":["Black20","val Black20: Color","eu.schk.designsystem.Black20"]},{"name":"val Black40: Color","description":"eu.schk.designsystem.Black40","location":"core/designsystem/eu.schk.designsystem/-black40.html","searchKeys":["Black40","val Black40: Color","eu.schk.designsystem.Black40"]},{"name":"val Black60: Color","description":"eu.schk.designsystem.Black60","location":"core/designsystem/eu.schk.designsystem/-black60.html","searchKeys":["Black60","val Black60: Color","eu.schk.designsystem.Black60"]},{"name":"val Black80: Color","description":"eu.schk.designsystem.Black80","location":"core/designsystem/eu.schk.designsystem/-black80.html","searchKeys":["Black80","val Black80: Color","eu.schk.designsystem.Black80"]},{"name":"val CardinalRed: Color","description":"eu.schk.designsystem.CardinalRed","location":"core/designsystem/eu.schk.designsystem/-cardinal-red.html","searchKeys":["CardinalRed","val CardinalRed: Color","eu.schk.designsystem.CardinalRed"]},{"name":"val CardinalRedDark: Color","description":"eu.schk.designsystem.CardinalRedDark","location":"core/designsystem/eu.schk.designsystem/-cardinal-red-dark.html","searchKeys":["CardinalRedDark","val CardinalRedDark: Color","eu.schk.designsystem.CardinalRedDark"]},{"name":"val CardinalRedLight: Color","description":"eu.schk.designsystem.CardinalRedLight","location":"core/designsystem/eu.schk.designsystem/-cardinal-red-light.html","searchKeys":["CardinalRedLight","val CardinalRedLight: Color","eu.schk.designsystem.CardinalRedLight"]},{"name":"val CoolGrey: Color","description":"eu.schk.designsystem.CoolGrey","location":"core/designsystem/eu.schk.designsystem/-cool-grey.html","searchKeys":["CoolGrey","val CoolGrey: Color","eu.schk.designsystem.CoolGrey"]},{"name":"val RectangleBlue: Color","description":"eu.schk.designsystem.RectangleBlue","location":"core/designsystem/eu.schk.designsystem/-rectangle-blue.html","searchKeys":["RectangleBlue","val RectangleBlue: Color","eu.schk.designsystem.RectangleBlue"]},{"name":"val Typography: Typography","description":"eu.schk.designsystem.Typography","location":"core/designsystem/eu.schk.designsystem/-typography.html","searchKeys":["Typography","val Typography: Typography","eu.schk.designsystem.Typography"]},{"name":"val White: Color","description":"eu.schk.designsystem.White","location":"core/designsystem/eu.schk.designsystem/-white.html","searchKeys":["White","val White: Color","eu.schk.designsystem.White"]},{"name":"CALL","description":"eu.schk.contact.repository.ContactOptionType.CALL","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/-c-a-l-l/index.html","searchKeys":["CALL","CALL","eu.schk.contact.repository.ContactOptionType.CALL"]},{"name":"EMAIL","description":"eu.schk.contact.repository.ContactOptionType.EMAIL","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/-e-m-a-i-l/index.html","searchKeys":["EMAIL","EMAIL","eu.schk.contact.repository.ContactOptionType.EMAIL"]},{"name":"WEBSITE","description":"eu.schk.contact.repository.ContactOptionType.WEBSITE","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/-w-e-b-s-i-t-e/index.html","searchKeys":["WEBSITE","WEBSITE","eu.schk.contact.repository.ContactOptionType.WEBSITE"]},{"name":"abstract fun getContact(): Contact","description":"eu.schk.contact.repository.ContactRepository.getContact","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-repository/get-contact.html","searchKeys":["getContact","abstract fun getContact(): Contact","eu.schk.contact.repository.ContactRepository.getContact"]},{"name":"class ContactViewModel(contactRepository: ContactRepository) : ViewModel","description":"eu.schk.contact.ContactViewModel","location":"spezi-feature/contact/eu.schk.contact/-contact-view-model/index.html","searchKeys":["ContactViewModel","class ContactViewModel(contactRepository: ContactRepository) : ViewModel","eu.schk.contact.ContactViewModel"]},{"name":"class DefaultContactRepository : ContactRepository","description":"eu.schk.contact.repository.DefaultContactRepository","location":"spezi-feature/contact/eu.schk.contact.repository/-default-contact-repository/index.html","searchKeys":["DefaultContactRepository","class DefaultContactRepository : ContactRepository","eu.schk.contact.repository.DefaultContactRepository"]},{"name":"constructor()","description":"eu.schk.contact.repository.DefaultContactRepository.DefaultContactRepository","location":"spezi-feature/contact/eu.schk.contact.repository/-default-contact-repository/-default-contact-repository.html","searchKeys":["DefaultContactRepository","constructor()","eu.schk.contact.repository.DefaultContactRepository.DefaultContactRepository"]},{"name":"constructor(contactRepository: ContactRepository)","description":"eu.schk.contact.ContactViewModel.ContactViewModel","location":"spezi-feature/contact/eu.schk.contact/-contact-view-model/-contact-view-model.html","searchKeys":["ContactViewModel","constructor(contactRepository: ContactRepository)","eu.schk.contact.ContactViewModel.ContactViewModel"]},{"name":"constructor(id: UUID, icon: ImageVector?, name: String, title: String, description: String, organization: String, address: String, options: List<ContactOption>)","description":"eu.schk.contact.repository.Contact.Contact","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/-contact.html","searchKeys":["Contact","constructor(id: UUID, icon: ImageVector?, name: String, title: String, description: String, organization: String, address: String, options: List<ContactOption>)","eu.schk.contact.repository.Contact.Contact"]},{"name":"constructor(id: UUID, name: String, value: String, icon: ImageVector?, optionType: ContactOptionType)","description":"eu.schk.contact.repository.ContactOption.ContactOption","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/-contact-option.html","searchKeys":["ContactOption","constructor(id: UUID, name: String, value: String, icon: ImageVector?, optionType: ContactOptionType)","eu.schk.contact.repository.ContactOption.ContactOption"]},{"name":"data class Contact(val id: UUID, val icon: ImageVector?, var name: String, val title: String, val description: String, val organization: String, val address: String, val options: List<ContactOption>)","description":"eu.schk.contact.repository.Contact","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/index.html","searchKeys":["Contact","data class Contact(val id: UUID, val icon: ImageVector?, var name: String, val title: String, val description: String, val organization: String, val address: String, val options: List<ContactOption>)","eu.schk.contact.repository.Contact"]},{"name":"data class ContactOption(val id: UUID, val name: String, val value: String, val icon: ImageVector?, val optionType: ContactOptionType)","description":"eu.schk.contact.repository.ContactOption","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/index.html","searchKeys":["ContactOption","data class ContactOption(val id: UUID, val name: String, val value: String, val icon: ImageVector?, val optionType: ContactOptionType)","eu.schk.contact.repository.ContactOption"]},{"name":"enum ContactOptionType : Enum<ContactOptionType> ","description":"eu.schk.contact.repository.ContactOptionType","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/index.html","searchKeys":["ContactOptionType","enum ContactOptionType : Enum<ContactOptionType> ","eu.schk.contact.repository.ContactOptionType"]},{"name":"fun ContactOptionCard(option: ContactOption)","description":"eu.schk.contact.components.ContactOptionCard","location":"spezi-feature/contact/eu.schk.contact.components/-contact-option-card.html","searchKeys":["ContactOptionCard","fun ContactOptionCard(option: ContactOption)","eu.schk.contact.components.ContactOptionCard"]},{"name":"fun ContactOptionCardPreview()","description":"eu.schk.contact.components.ContactOptionCardPreview","location":"spezi-feature/contact/eu.schk.contact.components/-contact-option-card-preview.html","searchKeys":["ContactOptionCardPreview","fun ContactOptionCardPreview()","eu.schk.contact.components.ContactOptionCardPreview"]},{"name":"fun ContactView(modifier: Modifier = Modifier, viewModel: ContactViewModel = viewModel())","description":"eu.schk.contact.ContactView","location":"spezi-feature/contact/eu.schk.contact/-contact-view.html","searchKeys":["ContactView","fun ContactView(modifier: Modifier = Modifier, viewModel: ContactViewModel = viewModel())","eu.schk.contact.ContactView"]},{"name":"fun NavigationCard(address: String)","description":"eu.schk.contact.components.NavigationCard","location":"spezi-feature/contact/eu.schk.contact.components/-navigation-card.html","searchKeys":["NavigationCard","fun NavigationCard(address: String)","eu.schk.contact.components.NavigationCard"]},{"name":"fun NavigationCardPreview()","description":"eu.schk.contact.components.NavigationCardPreview","location":"spezi-feature/contact/eu.schk.contact.components/-navigation-card-preview.html","searchKeys":["NavigationCardPreview","fun NavigationCardPreview()","eu.schk.contact.components.NavigationCardPreview"]},{"name":"fun PrevContactScreen()","description":"eu.schk.contact.PrevContactScreen","location":"spezi-feature/contact/eu.schk.contact/-prev-contact-screen.html","searchKeys":["PrevContactScreen","fun PrevContactScreen()","eu.schk.contact.PrevContactScreen"]},{"name":"fun valueOf(value: String): ContactOptionType","description":"eu.schk.contact.repository.ContactOptionType.valueOf","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ContactOptionType","eu.schk.contact.repository.ContactOptionType.valueOf"]},{"name":"fun values(): Array<ContactOptionType>","description":"eu.schk.contact.repository.ContactOptionType.values","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/values.html","searchKeys":["values","fun values(): Array<ContactOptionType>","eu.schk.contact.repository.ContactOptionType.values"]},{"name":"interface ContactRepository","description":"eu.schk.contact.repository.ContactRepository","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-repository/index.html","searchKeys":["ContactRepository","interface ContactRepository","eu.schk.contact.repository.ContactRepository"]},{"name":"open override fun getContact(): Contact","description":"eu.schk.contact.repository.DefaultContactRepository.getContact","location":"spezi-feature/contact/eu.schk.contact.repository/-default-contact-repository/get-contact.html","searchKeys":["getContact","open override fun getContact(): Contact","eu.schk.contact.repository.DefaultContactRepository.getContact"]},{"name":"val address: String","description":"eu.schk.contact.repository.Contact.address","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/address.html","searchKeys":["address","val address: String","eu.schk.contact.repository.Contact.address"]},{"name":"val contact: StateFlow<Contact>","description":"eu.schk.contact.ContactViewModel.contact","location":"spezi-feature/contact/eu.schk.contact/-contact-view-model/contact.html","searchKeys":["contact","val contact: StateFlow<Contact>","eu.schk.contact.ContactViewModel.contact"]},{"name":"val description: String","description":"eu.schk.contact.repository.Contact.description","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/description.html","searchKeys":["description","val description: String","eu.schk.contact.repository.Contact.description"]},{"name":"val entries: EnumEntries<ContactOptionType>","description":"eu.schk.contact.repository.ContactOptionType.entries","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ContactOptionType>","eu.schk.contact.repository.ContactOptionType.entries"]},{"name":"val icon: ImageVector?","description":"eu.schk.contact.repository.Contact.icon","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/icon.html","searchKeys":["icon","val icon: ImageVector?","eu.schk.contact.repository.Contact.icon"]},{"name":"val icon: ImageVector?","description":"eu.schk.contact.repository.ContactOption.icon","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/icon.html","searchKeys":["icon","val icon: ImageVector?","eu.schk.contact.repository.ContactOption.icon"]},{"name":"val id: UUID","description":"eu.schk.contact.repository.Contact.id","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/id.html","searchKeys":["id","val id: UUID","eu.schk.contact.repository.Contact.id"]},{"name":"val id: UUID","description":"eu.schk.contact.repository.ContactOption.id","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/id.html","searchKeys":["id","val id: UUID","eu.schk.contact.repository.ContactOption.id"]},{"name":"val name: String","description":"eu.schk.contact.repository.ContactOption.name","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/name.html","searchKeys":["name","val name: String","eu.schk.contact.repository.ContactOption.name"]},{"name":"val optionType: ContactOptionType","description":"eu.schk.contact.repository.ContactOption.optionType","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/option-type.html","searchKeys":["optionType","val optionType: ContactOptionType","eu.schk.contact.repository.ContactOption.optionType"]},{"name":"val options: List<ContactOption>","description":"eu.schk.contact.repository.Contact.options","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/options.html","searchKeys":["options","val options: List<ContactOption>","eu.schk.contact.repository.Contact.options"]},{"name":"val organization: String","description":"eu.schk.contact.repository.Contact.organization","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/organization.html","searchKeys":["organization","val organization: String","eu.schk.contact.repository.Contact.organization"]},{"name":"val title: String","description":"eu.schk.contact.repository.Contact.title","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/title.html","searchKeys":["title","val title: String","eu.schk.contact.repository.Contact.title"]},{"name":"val value: String","description":"eu.schk.contact.repository.ContactOption.value","location":"spezi-feature/contact/eu.schk.contact.repository/-contact-option/value.html","searchKeys":["value","val value: String","eu.schk.contact.repository.ContactOption.value"]},{"name":"var name: String","description":"eu.schk.contact.repository.Contact.name","location":"spezi-feature/contact/eu.schk.contact.repository/-contact/name.html","searchKeys":["name","var name: String","eu.schk.contact.repository.Contact.name"]},{"name":"BATTERY","description":"eu.schk.bluetooth_connectivity.omron.OmronService.BATTERY","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/-b-a-t-t-e-r-y/index.html","searchKeys":["BATTERY","BATTERY","eu.schk.bluetooth_connectivity.omron.OmronService.BATTERY"]},{"name":"BATTERY_LEVEL","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BATTERY_LEVEL","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/-b-a-t-t-e-r-y_-l-e-v-e-l/index.html","searchKeys":["BATTERY_LEVEL","BATTERY_LEVEL","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BATTERY_LEVEL"]},{"name":"BLOOD_PRESSURE","description":"eu.schk.bluetooth_connectivity.omron.OmronService.BLOOD_PRESSURE","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/-b-l-o-o-d_-p-r-e-s-s-u-r-e/index.html","searchKeys":["BLOOD_PRESSURE","BLOOD_PRESSURE","eu.schk.bluetooth_connectivity.omron.OmronService.BLOOD_PRESSURE"]},{"name":"BLOOD_PRESSURE_FEATURE","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BLOOD_PRESSURE_FEATURE","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/-b-l-o-o-d_-p-r-e-s-s-u-r-e_-f-e-a-t-u-r-e/index.html","searchKeys":["BLOOD_PRESSURE_FEATURE","BLOOD_PRESSURE_FEATURE","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BLOOD_PRESSURE_FEATURE"]},{"name":"BLOOD_PRESSURE_MEASUREMENT","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BLOOD_PRESSURE_MEASUREMENT","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/-b-l-o-o-d_-p-r-e-s-s-u-r-e_-m-e-a-s-u-r-e-m-e-n-t/index.html","searchKeys":["BLOOD_PRESSURE_MEASUREMENT","BLOOD_PRESSURE_MEASUREMENT","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.BLOOD_PRESSURE_MEASUREMENT"]},{"name":"CURRENT_TIME","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.CURRENT_TIME","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/-c-u-r-r-e-n-t_-t-i-m-e/index.html","searchKeys":["CURRENT_TIME","CURRENT_TIME","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.CURRENT_TIME"]},{"name":"CURRENT_TIME","description":"eu.schk.bluetooth_connectivity.omron.OmronService.CURRENT_TIME","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/-c-u-r-r-e-n-t_-t-i-m-e/index.html","searchKeys":["CURRENT_TIME","CURRENT_TIME","eu.schk.bluetooth_connectivity.omron.OmronService.CURRENT_TIME"]},{"name":"DEVICE_INFORMATION","description":"eu.schk.bluetooth_connectivity.omron.OmronService.DEVICE_INFORMATION","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/-d-e-v-i-c-e_-i-n-f-o-r-m-a-t-i-o-n/index.html","searchKeys":["DEVICE_INFORMATION","DEVICE_INFORMATION","eu.schk.bluetooth_connectivity.omron.OmronService.DEVICE_INFORMATION"]},{"name":"MODEL_NUMBER_CHARACTERISTICS","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.MODEL_NUMBER_CHARACTERISTICS","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/-m-o-d-e-l_-n-u-m-b-e-r_-c-h-a-r-a-c-t-e-r-i-s-t-i-c-s/index.html","searchKeys":["MODEL_NUMBER_CHARACTERISTICS","MODEL_NUMBER_CHARACTERISTICS","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.MODEL_NUMBER_CHARACTERISTICS"]},{"name":"class BluetoothManager(context: Context)","description":"eu.schk.bluetooth_connectivity.omron.BluetoothManager","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-bluetooth-manager/index.html","searchKeys":["BluetoothManager","class BluetoothManager(context: Context)","eu.schk.bluetooth_connectivity.omron.BluetoothManager"]},{"name":"constructor(bloodPressureUnitsFlag: Boolean, timeStampFlag: Boolean, pulseRateFlag: Boolean, userIdFlag: Boolean, measurementStatusFlag: Boolean)","description":"eu.schk.bluetooth_connectivity.omron.Flags.Flags","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/-flags.html","searchKeys":["Flags","constructor(bloodPressureUnitsFlag: Boolean, timeStampFlag: Boolean, pulseRateFlag: Boolean, userIdFlag: Boolean, measurementStatusFlag: Boolean)","eu.schk.bluetooth_connectivity.omron.Flags.Flags"]},{"name":"constructor(bodyMovementDetectionFlag: Boolean, cuffFitDetectionFlag: Boolean, irregularPulseDetectionFlag: Boolean, pulseRateRangeDetectionFlags: Int, measurementPositionDetectionFlag: Boolean)","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.MeasurementStatus","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/-measurement-status.html","searchKeys":["MeasurementStatus","constructor(bodyMovementDetectionFlag: Boolean, cuffFitDetectionFlag: Boolean, irregularPulseDetectionFlag: Boolean, pulseRateRangeDetectionFlags: Int, measurementPositionDetectionFlag: Boolean)","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.MeasurementStatus"]},{"name":"constructor(context: Context)","description":"eu.schk.bluetooth_connectivity.omron.BluetoothManager.BluetoothManager","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-bluetooth-manager/-bluetooth-manager.html","searchKeys":["BluetoothManager","constructor(context: Context)","eu.schk.bluetooth_connectivity.omron.BluetoothManager.BluetoothManager"]},{"name":"constructor(flags: Flags, systolic: Float, diastolic: Float, meanArterialPressure: Float, timestampYear: Int, timestampMonth: Int, timestampDay: Int, timeStampHour: Int, timeStampMinute: Int, timeStampSecond: Int, pulseRate: Float, userId: Int, measurementStatus: MeasurementStatus)","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.BloodPressureMeasurement","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/-blood-pressure-measurement.html","searchKeys":["BloodPressureMeasurement","constructor(flags: Flags, systolic: Float, diastolic: Float, meanArterialPressure: Float, timestampYear: Int, timestampMonth: Int, timestampDay: Int, timeStampHour: Int, timeStampMinute: Int, timeStampSecond: Int, pulseRate: Float, userId: Int, measurementStatus: MeasurementStatus)","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.BloodPressureMeasurement"]},{"name":"data class BloodPressureMeasurement(val flags: Flags, val systolic: Float, val diastolic: Float, val meanArterialPressure: Float, val timestampYear: Int, val timestampMonth: Int, val timestampDay: Int, val timeStampHour: Int, val timeStampMinute: Int, val timeStampSecond: Int, val pulseRate: Float, val userId: Int, val measurementStatus: MeasurementStatus)","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/index.html","searchKeys":["BloodPressureMeasurement","data class BloodPressureMeasurement(val flags: Flags, val systolic: Float, val diastolic: Float, val meanArterialPressure: Float, val timestampYear: Int, val timestampMonth: Int, val timestampDay: Int, val timeStampHour: Int, val timeStampMinute: Int, val timeStampSecond: Int, val pulseRate: Float, val userId: Int, val measurementStatus: MeasurementStatus)","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement"]},{"name":"data class Flags(val bloodPressureUnitsFlag: Boolean, val timeStampFlag: Boolean, val pulseRateFlag: Boolean, val userIdFlag: Boolean, val measurementStatusFlag: Boolean)","description":"eu.schk.bluetooth_connectivity.omron.Flags","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/index.html","searchKeys":["Flags","data class Flags(val bloodPressureUnitsFlag: Boolean, val timeStampFlag: Boolean, val pulseRateFlag: Boolean, val userIdFlag: Boolean, val measurementStatusFlag: Boolean)","eu.schk.bluetooth_connectivity.omron.Flags"]},{"name":"data class MeasurementStatus(val bodyMovementDetectionFlag: Boolean, val cuffFitDetectionFlag: Boolean, val irregularPulseDetectionFlag: Boolean, val pulseRateRangeDetectionFlags: Int, val measurementPositionDetectionFlag: Boolean)","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/index.html","searchKeys":["MeasurementStatus","data class MeasurementStatus(val bodyMovementDetectionFlag: Boolean, val cuffFitDetectionFlag: Boolean, val irregularPulseDetectionFlag: Boolean, val pulseRateRangeDetectionFlags: Int, val measurementPositionDetectionFlag: Boolean)","eu.schk.bluetooth_connectivity.omron.MeasurementStatus"]},{"name":"enum OmronDescriptors : Enum<OmronDescriptors> ","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/index.html","searchKeys":["OmronDescriptors","enum OmronDescriptors : Enum<OmronDescriptors> ","eu.schk.bluetooth_connectivity.omron.OmronDescriptors"]},{"name":"enum OmronService : Enum<OmronService> ","description":"eu.schk.bluetooth_connectivity.omron.OmronService","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/index.html","searchKeys":["OmronService","enum OmronService : Enum<OmronService> ","eu.schk.bluetooth_connectivity.omron.OmronService"]},{"name":"fun close()","description":"eu.schk.bluetooth_connectivity.omron.BluetoothManager.close","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-bluetooth-manager/close.html","searchKeys":["close","fun close()","eu.schk.bluetooth_connectivity.omron.BluetoothManager.close"]},{"name":"fun connectToDevice(device: BluetoothDevice)","description":"eu.schk.bluetooth_connectivity.omron.BluetoothManager.connectToDevice","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-bluetooth-manager/connect-to-device.html","searchKeys":["connectToDevice","fun connectToDevice(device: BluetoothDevice)","eu.schk.bluetooth_connectivity.omron.BluetoothManager.connectToDevice"]},{"name":"fun fromByteArray(bytes: ByteArray): BloodPressureMeasurement","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.Companion.fromByteArray","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/-companion/from-byte-array.html","searchKeys":["fromByteArray","fun fromByteArray(bytes: ByteArray): BloodPressureMeasurement","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.Companion.fromByteArray"]},{"name":"fun getOmronDescriptorNameByUUID(descriptorUUID: UUID): String?","description":"eu.schk.bluetooth_connectivity.omron.getOmronDescriptorNameByUUID","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/get-omron-descriptor-name-by-u-u-i-d.html","searchKeys":["getOmronDescriptorNameByUUID","fun getOmronDescriptorNameByUUID(descriptorUUID: UUID): String?","eu.schk.bluetooth_connectivity.omron.getOmronDescriptorNameByUUID"]},{"name":"fun getOmronServiceNameByDescriptorUUID(descriptorUUID: UUID): String?","description":"eu.schk.bluetooth_connectivity.omron.getOmronServiceNameByDescriptorUUID","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/get-omron-service-name-by-descriptor-u-u-i-d.html","searchKeys":["getOmronServiceNameByDescriptorUUID","fun getOmronServiceNameByDescriptorUUID(descriptorUUID: UUID): String?","eu.schk.bluetooth_connectivity.omron.getOmronServiceNameByDescriptorUUID"]},{"name":"fun isServiceUUIDInOmronServices(serviceUUID: UUID): Boolean","description":"eu.schk.bluetooth_connectivity.omron.isServiceUUIDInOmronServices","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/is-service-u-u-i-d-in-omron-services.html","searchKeys":["isServiceUUIDInOmronServices","fun isServiceUUIDInOmronServices(serviceUUID: UUID): Boolean","eu.schk.bluetooth_connectivity.omron.isServiceUUIDInOmronServices"]},{"name":"fun readCharacteristic(characteristic: BluetoothGattCharacteristic)","description":"eu.schk.bluetooth_connectivity.omron.BluetoothManager.readCharacteristic","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-bluetooth-manager/read-characteristic.html","searchKeys":["readCharacteristic","fun readCharacteristic(characteristic: BluetoothGattCharacteristic)","eu.schk.bluetooth_connectivity.omron.BluetoothManager.readCharacteristic"]},{"name":"fun valueOf(value: String): OmronDescriptors","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.valueOf","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OmronDescriptors","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.valueOf"]},{"name":"fun valueOf(value: String): OmronService","description":"eu.schk.bluetooth_connectivity.omron.OmronService.valueOf","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OmronService","eu.schk.bluetooth_connectivity.omron.OmronService.valueOf"]},{"name":"fun values(): Array<OmronDescriptors>","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.values","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/values.html","searchKeys":["values","fun values(): Array<OmronDescriptors>","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.values"]},{"name":"fun values(): Array<OmronService>","description":"eu.schk.bluetooth_connectivity.omron.OmronService.values","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/values.html","searchKeys":["values","fun values(): Array<OmronService>","eu.schk.bluetooth_connectivity.omron.OmronService.values"]},{"name":"object Companion","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.Companion","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/-companion/index.html","searchKeys":["Companion","object Companion","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.Companion"]},{"name":"val bloodPressureUnitsFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.Flags.bloodPressureUnitsFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/blood-pressure-units-flag.html","searchKeys":["bloodPressureUnitsFlag","val bloodPressureUnitsFlag: Boolean","eu.schk.bluetooth_connectivity.omron.Flags.bloodPressureUnitsFlag"]},{"name":"val bodyMovementDetectionFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.bodyMovementDetectionFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/body-movement-detection-flag.html","searchKeys":["bodyMovementDetectionFlag","val bodyMovementDetectionFlag: Boolean","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.bodyMovementDetectionFlag"]},{"name":"val cuffFitDetectionFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.cuffFitDetectionFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/cuff-fit-detection-flag.html","searchKeys":["cuffFitDetectionFlag","val cuffFitDetectionFlag: Boolean","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.cuffFitDetectionFlag"]},{"name":"val descriptorName: String","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.descriptorName","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/descriptor-name.html","searchKeys":["descriptorName","val descriptorName: String","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.descriptorName"]},{"name":"val descriptors: List<OmronDescriptors>","description":"eu.schk.bluetooth_connectivity.omron.OmronService.descriptors","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/descriptors.html","searchKeys":["descriptors","val descriptors: List<OmronDescriptors>","eu.schk.bluetooth_connectivity.omron.OmronService.descriptors"]},{"name":"val diastolic: Float","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.diastolic","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/diastolic.html","searchKeys":["diastolic","val diastolic: Float","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.diastolic"]},{"name":"val entries: EnumEntries<OmronDescriptors>","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.entries","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/entries.html","searchKeys":["entries","val entries: EnumEntries<OmronDescriptors>","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.entries"]},{"name":"val entries: EnumEntries<OmronService>","description":"eu.schk.bluetooth_connectivity.omron.OmronService.entries","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/entries.html","searchKeys":["entries","val entries: EnumEntries<OmronService>","eu.schk.bluetooth_connectivity.omron.OmronService.entries"]},{"name":"val flags: Flags","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.flags","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/flags.html","searchKeys":["flags","val flags: Flags","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.flags"]},{"name":"val irregularPulseDetectionFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.irregularPulseDetectionFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/irregular-pulse-detection-flag.html","searchKeys":["irregularPulseDetectionFlag","val irregularPulseDetectionFlag: Boolean","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.irregularPulseDetectionFlag"]},{"name":"val meanArterialPressure: Float","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.meanArterialPressure","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/mean-arterial-pressure.html","searchKeys":["meanArterialPressure","val meanArterialPressure: Float","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.meanArterialPressure"]},{"name":"val measurementPositionDetectionFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.measurementPositionDetectionFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/measurement-position-detection-flag.html","searchKeys":["measurementPositionDetectionFlag","val measurementPositionDetectionFlag: Boolean","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.measurementPositionDetectionFlag"]},{"name":"val measurementStatus: MeasurementStatus","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.measurementStatus","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/measurement-status.html","searchKeys":["measurementStatus","val measurementStatus: MeasurementStatus","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.measurementStatus"]},{"name":"val measurementStatusFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.Flags.measurementStatusFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/measurement-status-flag.html","searchKeys":["measurementStatusFlag","val measurementStatusFlag: Boolean","eu.schk.bluetooth_connectivity.omron.Flags.measurementStatusFlag"]},{"name":"val omronServiceMap: Map<UUID, OmronService>","description":"eu.schk.bluetooth_connectivity.omron.omronServiceMap","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/omron-service-map.html","searchKeys":["omronServiceMap","val omronServiceMap: Map<UUID, OmronService>","eu.schk.bluetooth_connectivity.omron.omronServiceMap"]},{"name":"val pulseRate: Float","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.pulseRate","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/pulse-rate.html","searchKeys":["pulseRate","val pulseRate: Float","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.pulseRate"]},{"name":"val pulseRateFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.Flags.pulseRateFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/pulse-rate-flag.html","searchKeys":["pulseRateFlag","val pulseRateFlag: Boolean","eu.schk.bluetooth_connectivity.omron.Flags.pulseRateFlag"]},{"name":"val pulseRateRangeDetectionFlags: Int","description":"eu.schk.bluetooth_connectivity.omron.MeasurementStatus.pulseRateRangeDetectionFlags","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-measurement-status/pulse-rate-range-detection-flags.html","searchKeys":["pulseRateRangeDetectionFlags","val pulseRateRangeDetectionFlags: Int","eu.schk.bluetooth_connectivity.omron.MeasurementStatus.pulseRateRangeDetectionFlags"]},{"name":"val serviceName: String","description":"eu.schk.bluetooth_connectivity.omron.OmronService.serviceName","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/service-name.html","searchKeys":["serviceName","val serviceName: String","eu.schk.bluetooth_connectivity.omron.OmronService.serviceName"]},{"name":"val systolic: Float","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.systolic","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/systolic.html","searchKeys":["systolic","val systolic: Float","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.systolic"]},{"name":"val timeStampFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.Flags.timeStampFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/time-stamp-flag.html","searchKeys":["timeStampFlag","val timeStampFlag: Boolean","eu.schk.bluetooth_connectivity.omron.Flags.timeStampFlag"]},{"name":"val timeStampHour: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampHour","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/time-stamp-hour.html","searchKeys":["timeStampHour","val timeStampHour: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampHour"]},{"name":"val timeStampMinute: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampMinute","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/time-stamp-minute.html","searchKeys":["timeStampMinute","val timeStampMinute: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampMinute"]},{"name":"val timeStampSecond: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampSecond","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/time-stamp-second.html","searchKeys":["timeStampSecond","val timeStampSecond: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timeStampSecond"]},{"name":"val timestampDay: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampDay","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/timestamp-day.html","searchKeys":["timestampDay","val timestampDay: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampDay"]},{"name":"val timestampMonth: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampMonth","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/timestamp-month.html","searchKeys":["timestampMonth","val timestampMonth: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampMonth"]},{"name":"val timestampYear: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampYear","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/timestamp-year.html","searchKeys":["timestampYear","val timestampYear: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.timestampYear"]},{"name":"val userId: Int","description":"eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.userId","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-blood-pressure-measurement/user-id.html","searchKeys":["userId","val userId: Int","eu.schk.bluetooth_connectivity.omron.BloodPressureMeasurement.userId"]},{"name":"val userIdFlag: Boolean","description":"eu.schk.bluetooth_connectivity.omron.Flags.userIdFlag","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-flags/user-id-flag.html","searchKeys":["userIdFlag","val userIdFlag: Boolean","eu.schk.bluetooth_connectivity.omron.Flags.userIdFlag"]},{"name":"val uuid: UUID","description":"eu.schk.bluetooth_connectivity.omron.OmronDescriptors.uuid","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-descriptors/uuid.html","searchKeys":["uuid","val uuid: UUID","eu.schk.bluetooth_connectivity.omron.OmronDescriptors.uuid"]},{"name":"val uuid: UUID","description":"eu.schk.bluetooth_connectivity.omron.OmronService.uuid","location":"core/bluetooth-connectivity/eu.schk.bluetooth_connectivity.omron/-omron-service/uuid.html","searchKeys":["uuid","val uuid: UUID","eu.schk.bluetooth_connectivity.omron.OmronService.uuid"]},{"name":"abstract fun getHealthInfo(): HealthInfoModel","description":"eu.schk.chart.repository.HealthInfoRepository.getHealthInfo","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-repository/get-health-info.html","searchKeys":["getHealthInfo","abstract fun getHealthInfo(): HealthInfoModel","eu.schk.chart.repository.HealthInfoRepository.getHealthInfo"]},{"name":"abstract fun getHealthInfos(): List<HealthInfoModel>","description":"eu.schk.chart.repository.HealthInfoRepository.getHealthInfos","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-repository/get-health-infos.html","searchKeys":["getHealthInfos","abstract fun getHealthInfos(): List<HealthInfoModel>","eu.schk.chart.repository.HealthInfoRepository.getHealthInfos"]},{"name":"class DefaultHealthInfoRepository : HealthInfoRepository","description":"eu.schk.chart.repository.DefaultHealthInfoRepository","location":"spezi-feature/chart/eu.schk.chart.repository/-default-health-info-repository/index.html","searchKeys":["DefaultHealthInfoRepository","class DefaultHealthInfoRepository : HealthInfoRepository","eu.schk.chart.repository.DefaultHealthInfoRepository"]},{"name":"constructor()","description":"eu.schk.chart.repository.DefaultHealthInfoRepository.DefaultHealthInfoRepository","location":"spezi-feature/chart/eu.schk.chart.repository/-default-health-info-repository/-default-health-info-repository.html","searchKeys":["DefaultHealthInfoRepository","constructor()","eu.schk.chart.repository.DefaultHealthInfoRepository.DefaultHealthInfoRepository"]},{"name":"constructor(iconDrawable: Int, healthType: String, valueReadings: List<Pair<LocalDateTime, Int>>, averageValue: Int, maxValue: Int, unit: String)","description":"eu.schk.chart.repository.HealthInfoModel.HealthInfoModel","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/-health-info-model.html","searchKeys":["HealthInfoModel","constructor(iconDrawable: Int, healthType: String, valueReadings: List<Pair<LocalDateTime, Int>>, averageValue: Int, maxValue: Int, unit: String)","eu.schk.chart.repository.HealthInfoModel.HealthInfoModel"]},{"name":"data class HealthInfoModel(val iconDrawable: Int, val healthType: String, val valueReadings: List<Pair<LocalDateTime, Int>>, val averageValue: Int, val maxValue: Int, val unit: String)","description":"eu.schk.chart.repository.HealthInfoModel","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/index.html","searchKeys":["HealthInfoModel","data class HealthInfoModel(val iconDrawable: Int, val healthType: String, val valueReadings: List<Pair<LocalDateTime, Int>>, val averageValue: Int, val maxValue: Int, val unit: String)","eu.schk.chart.repository.HealthInfoModel"]},{"name":"fun CircleChartIcon(icon: ImageVector, percentage: Float)","description":"eu.schk.chart.components.CircleChartIcon","location":"spezi-feature/chart/eu.schk.chart.components/-circle-chart-icon.html","searchKeys":["CircleChartIcon","fun CircleChartIcon(icon: ImageVector, percentage: Float)","eu.schk.chart.components.CircleChartIcon"]},{"name":"fun DrawScope.drawLineGraph(readings: List<Pair<LocalDateTime, Int>>, maxRate: Int, minRate: Int, unit: String)","description":"eu.schk.chart.components.drawLineGraph","location":"spezi-feature/chart/eu.schk.chart.components/draw-line-graph.html","searchKeys":["drawLineGraph","fun DrawScope.drawLineGraph(readings: List<Pair<LocalDateTime, Int>>, maxRate: Int, minRate: Int, unit: String)","eu.schk.chart.components.drawLineGraph"]},{"name":"fun HealthInfoBox(title: String, lastValueDate: String, value: Int, maxValue: Int, unit: String, icon: ImageVector)","description":"eu.schk.chart.components.HealthInfoBox","location":"spezi-feature/chart/eu.schk.chart.components/-health-info-box.html","searchKeys":["HealthInfoBox","fun HealthInfoBox(title: String, lastValueDate: String, value: Int, maxValue: Int, unit: String, icon: ImageVector)","eu.schk.chart.components.HealthInfoBox"]},{"name":"fun HealthInfoBoxPreview()","description":"eu.schk.chart.components.HealthInfoBoxPreview","location":"spezi-feature/chart/eu.schk.chart.components/-health-info-box-preview.html","searchKeys":["HealthInfoBoxPreview","fun HealthInfoBoxPreview()","eu.schk.chart.components.HealthInfoBoxPreview"]},{"name":"fun HealthInfoWidget(healthInfoModel: HealthInfoModel, modifier: Modifier = Modifier)","description":"eu.schk.chart.components.HealthInfoWidget","location":"spezi-feature/chart/eu.schk.chart.components/-health-info-widget.html","searchKeys":["HealthInfoWidget","fun HealthInfoWidget(healthInfoModel: HealthInfoModel, modifier: Modifier = Modifier)","eu.schk.chart.components.HealthInfoWidget"]},{"name":"fun HealthInfoWidgetPreview()","description":"eu.schk.chart.components.HealthInfoWidgetPreview","location":"spezi-feature/chart/eu.schk.chart.components/-health-info-widget-preview.html","searchKeys":["HealthInfoWidgetPreview","fun HealthInfoWidgetPreview()","eu.schk.chart.components.HealthInfoWidgetPreview"]},{"name":"interface HealthInfoRepository","description":"eu.schk.chart.repository.HealthInfoRepository","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-repository/index.html","searchKeys":["HealthInfoRepository","interface HealthInfoRepository","eu.schk.chart.repository.HealthInfoRepository"]},{"name":"open override fun getHealthInfo(): HealthInfoModel","description":"eu.schk.chart.repository.DefaultHealthInfoRepository.getHealthInfo","location":"spezi-feature/chart/eu.schk.chart.repository/-default-health-info-repository/get-health-info.html","searchKeys":["getHealthInfo","open override fun getHealthInfo(): HealthInfoModel","eu.schk.chart.repository.DefaultHealthInfoRepository.getHealthInfo"]},{"name":"open override fun getHealthInfos(): List<HealthInfoModel>","description":"eu.schk.chart.repository.DefaultHealthInfoRepository.getHealthInfos","location":"spezi-feature/chart/eu.schk.chart.repository/-default-health-info-repository/get-health-infos.html","searchKeys":["getHealthInfos","open override fun getHealthInfos(): List<HealthInfoModel>","eu.schk.chart.repository.DefaultHealthInfoRepository.getHealthInfos"]},{"name":"val averageValue: Int","description":"eu.schk.chart.repository.HealthInfoModel.averageValue","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/average-value.html","searchKeys":["averageValue","val averageValue: Int","eu.schk.chart.repository.HealthInfoModel.averageValue"]},{"name":"val healthType: String","description":"eu.schk.chart.repository.HealthInfoModel.healthType","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/health-type.html","searchKeys":["healthType","val healthType: String","eu.schk.chart.repository.HealthInfoModel.healthType"]},{"name":"val iconDrawable: Int","description":"eu.schk.chart.repository.HealthInfoModel.iconDrawable","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/icon-drawable.html","searchKeys":["iconDrawable","val iconDrawable: Int","eu.schk.chart.repository.HealthInfoModel.iconDrawable"]},{"name":"val maxValue: Int","description":"eu.schk.chart.repository.HealthInfoModel.maxValue","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/max-value.html","searchKeys":["maxValue","val maxValue: Int","eu.schk.chart.repository.HealthInfoModel.maxValue"]},{"name":"val unit: String","description":"eu.schk.chart.repository.HealthInfoModel.unit","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/unit.html","searchKeys":["unit","val unit: String","eu.schk.chart.repository.HealthInfoModel.unit"]},{"name":"val valueReadings: List<Pair<LocalDateTime, Int>>","description":"eu.schk.chart.repository.HealthInfoModel.valueReadings","location":"spezi-feature/chart/eu.schk.chart.repository/-health-info-model/value-readings.html","searchKeys":["valueReadings","val valueReadings: List<Pair<LocalDateTime, Int>>","eu.schk.chart.repository.HealthInfoModel.valueReadings"]},{"name":"constructor(name: String = \"Home\")","description":"eu.schk.login.nav.Route.HomeScreen.HomeScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-home-screen/-home-screen.html","searchKeys":["HomeScreen","constructor(name: String = \"Home\")","eu.schk.login.nav.Route.HomeScreen.HomeScreen"]},{"name":"constructor(name: String = \"Login\")","description":"eu.schk.login.nav.Route.LoginScreen.LoginScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-login-screen/-login-screen.html","searchKeys":["LoginScreen","constructor(name: String = \"Login\")","eu.schk.login.nav.Route.LoginScreen.LoginScreen"]},{"name":"constructor(name: String = \"Policy\")","description":"eu.schk.login.nav.Route.PolicyScreen.PolicyScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-policy-screen/-policy-screen.html","searchKeys":["PolicyScreen","constructor(name: String = \"Policy\")","eu.schk.login.nav.Route.PolicyScreen.PolicyScreen"]},{"name":"constructor(name: String = \"Privacy\")","description":"eu.schk.login.nav.Route.PrivacyScreen.PrivacyScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-privacy-screen/-privacy-screen.html","searchKeys":["PrivacyScreen","constructor(name: String = \"Privacy\")","eu.schk.login.nav.Route.PrivacyScreen.PrivacyScreen"]},{"name":"constructor(name: String = \"SignUp\")","description":"eu.schk.login.nav.Route.SignUpScreen.SignUpScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-sign-up-screen/-sign-up-screen.html","searchKeys":["SignUpScreen","constructor(name: String = \"SignUp\")","eu.schk.login.nav.Route.SignUpScreen.SignUpScreen"]},{"name":"data class HomeScreen(val name: String = \"Home\") : Route","description":"eu.schk.login.nav.Route.HomeScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-home-screen/index.html","searchKeys":["HomeScreen","data class HomeScreen(val name: String = \"Home\") : Route","eu.schk.login.nav.Route.HomeScreen"]},{"name":"data class LoginScreen(val name: String = \"Login\") : Route","description":"eu.schk.login.nav.Route.LoginScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-login-screen/index.html","searchKeys":["LoginScreen","data class LoginScreen(val name: String = \"Login\") : Route","eu.schk.login.nav.Route.LoginScreen"]},{"name":"data class PolicyScreen(val name: String = \"Policy\") : Route","description":"eu.schk.login.nav.Route.PolicyScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-policy-screen/index.html","searchKeys":["PolicyScreen","data class PolicyScreen(val name: String = \"Policy\") : Route","eu.schk.login.nav.Route.PolicyScreen"]},{"name":"data class PrivacyScreen(val name: String = \"Privacy\") : Route","description":"eu.schk.login.nav.Route.PrivacyScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-privacy-screen/index.html","searchKeys":["PrivacyScreen","data class PrivacyScreen(val name: String = \"Privacy\") : Route","eu.schk.login.nav.Route.PrivacyScreen"]},{"name":"data class SignUpScreen(val name: String = \"SignUp\") : Route","description":"eu.schk.login.nav.Route.SignUpScreen","location":"spezi-feature/login/eu.schk.login.nav/-route/-sign-up-screen/index.html","searchKeys":["SignUpScreen","data class SignUpScreen(val name: String = \"SignUp\") : Route","eu.schk.login.nav.Route.SignUpScreen"]},{"name":"fun AlternativeLoginOptions(onIconClick: (index: Int) -> Unit, onSignUpClick: () -> Unit, modifier: Modifier = Modifier)","description":"eu.schk.login.screens.AlternativeLoginOptions","location":"spezi-feature/login/eu.schk.login.screens/-alternative-login-options.html","searchKeys":["AlternativeLoginOptions","fun AlternativeLoginOptions(onIconClick: (index: Int) -> Unit, onSignUpClick: () -> Unit, modifier: Modifier = Modifier)","eu.schk.login.screens.AlternativeLoginOptions"]},{"name":"fun CustomTextField(modifier: Modifier = Modifier, value: String, onValueChange: (String) -> Unit, labelText: String, leadingIcon: ImageVector? = null, keyboardType: KeyboardType = KeyboardType.Text, visualTransformation: VisualTransformation = VisualTransformation.None)","description":"eu.schk.login.components.CustomTextField","location":"spezi-feature/login/eu.schk.login.components/-custom-text-field.html","searchKeys":["CustomTextField","fun CustomTextField(modifier: Modifier = Modifier, value: String, onValueChange: (String) -> Unit, labelText: String, leadingIcon: ImageVector? = null, keyboardType: KeyboardType = KeyboardType.Text, visualTransformation: VisualTransformation = VisualTransformation.None)","eu.schk.login.components.CustomTextField"]},{"name":"fun HeaderText(text: String, modifier: Modifier = Modifier)","description":"eu.schk.login.components.HeaderText","location":"spezi-feature/login/eu.schk.login.components/-header-text.html","searchKeys":["HeaderText","fun HeaderText(text: String, modifier: Modifier = Modifier)","eu.schk.login.components.HeaderText"]},{"name":"fun HomeScreen()","description":"eu.schk.login.screens.HomeScreen","location":"spezi-feature/login/eu.schk.login.screens/-home-screen.html","searchKeys":["HomeScreen","fun HomeScreen()","eu.schk.login.screens.HomeScreen"]},{"name":"fun LoginScreen(onLoginClick: () -> Unit, onSignUpClick: () -> Unit)","description":"eu.schk.login.screens.LoginScreen","location":"spezi-feature/login/eu.schk.login.screens/-login-screen.html","searchKeys":["LoginScreen","fun LoginScreen(onLoginClick: () -> Unit, onSignUpClick: () -> Unit)","eu.schk.login.screens.LoginScreen"]},{"name":"fun MyNavigation(navHostController: NavHostController)","description":"eu.schk.login.nav.MyNavigation","location":"spezi-feature/login/eu.schk.login.nav/-my-navigation.html","searchKeys":["MyNavigation","fun MyNavigation(navHostController: NavHostController)","eu.schk.login.nav.MyNavigation"]},{"name":"fun NavController.navigateToSingleTop(route: String)","description":"eu.schk.login.nav.navigateToSingleTop","location":"spezi-feature/login/eu.schk.login.nav/navigate-to-single-top.html","searchKeys":["navigateToSingleTop","fun NavController.navigateToSingleTop(route: String)","eu.schk.login.nav.navigateToSingleTop"]},{"name":"fun PolicyScreen(onBtnClick: () -> Unit)","description":"eu.schk.login.screens.PolicyScreen","location":"spezi-feature/login/eu.schk.login.screens/-policy-screen.html","searchKeys":["PolicyScreen","fun PolicyScreen(onBtnClick: () -> Unit)","eu.schk.login.screens.PolicyScreen"]},{"name":"fun PrevLoginScreen()","description":"eu.schk.login.screens.PrevLoginScreen","location":"spezi-feature/login/eu.schk.login.screens/-prev-login-screen.html","searchKeys":["PrevLoginScreen","fun PrevLoginScreen()","eu.schk.login.screens.PrevLoginScreen"]},{"name":"fun PrevSignUp()","description":"eu.schk.login.screens.PrevSignUp","location":"spezi-feature/login/eu.schk.login.screens/-prev-sign-up.html","searchKeys":["PrevSignUp","fun PrevSignUp()","eu.schk.login.screens.PrevSignUp"]},{"name":"fun PrevTextField()","description":"eu.schk.login.components.PrevTextField","location":"spezi-feature/login/eu.schk.login.components/-prev-text-field.html","searchKeys":["PrevTextField","fun PrevTextField()","eu.schk.login.components.PrevTextField"]},{"name":"fun PricacyScreen(onBtnClick: () -> Unit)","description":"eu.schk.login.screens.PricacyScreen","location":"spezi-feature/login/eu.schk.login.screens/-pricacy-screen.html","searchKeys":["PricacyScreen","fun PricacyScreen(onBtnClick: () -> Unit)","eu.schk.login.screens.PricacyScreen"]},{"name":"fun SignUpScreen(onSignUpClick: () -> Unit, onLoginClick: () -> Unit, onPolicyClick: () -> Unit, onPrivacyClick: () -> Unit)","description":"eu.schk.login.screens.SignUpScreen","location":"spezi-feature/login/eu.schk.login.screens/-sign-up-screen.html","searchKeys":["SignUpScreen","fun SignUpScreen(onSignUpClick: () -> Unit, onLoginClick: () -> Unit, onPolicyClick: () -> Unit, onPrivacyClick: () -> Unit)","eu.schk.login.screens.SignUpScreen"]},{"name":"protected constructor()","description":"eu.schk.login.nav.Route.Route","location":"spezi-feature/login/eu.schk.login.nav/-route/-route.html","searchKeys":["Route","protected constructor()","eu.schk.login.nav.Route.Route"]},{"name":"sealed class Route","description":"eu.schk.login.nav.Route","location":"spezi-feature/login/eu.schk.login.nav/-route/index.html","searchKeys":["Route","sealed class Route","eu.schk.login.nav.Route"]},{"name":"val defaultPadding: Dp","description":"eu.schk.login.screens.defaultPadding","location":"spezi-feature/login/eu.schk.login.screens/default-padding.html","searchKeys":["defaultPadding","val defaultPadding: Dp","eu.schk.login.screens.defaultPadding"]},{"name":"val itemSpacing: Dp","description":"eu.schk.login.screens.itemSpacing","location":"spezi-feature/login/eu.schk.login.screens/item-spacing.html","searchKeys":["itemSpacing","val itemSpacing: Dp","eu.schk.login.screens.itemSpacing"]},{"name":"val name: String","description":"eu.schk.login.nav.Route.HomeScreen.name","location":"spezi-feature/login/eu.schk.login.nav/-route/-home-screen/name.html","searchKeys":["name","val name: String","eu.schk.login.nav.Route.HomeScreen.name"]},{"name":"val name: String","description":"eu.schk.login.nav.Route.LoginScreen.name","location":"spezi-feature/login/eu.schk.login.nav/-route/-login-screen/name.html","searchKeys":["name","val name: String","eu.schk.login.nav.Route.LoginScreen.name"]},{"name":"val name: String","description":"eu.schk.login.nav.Route.PolicyScreen.name","location":"spezi-feature/login/eu.schk.login.nav/-route/-policy-screen/name.html","searchKeys":["name","val name: String","eu.schk.login.nav.Route.PolicyScreen.name"]},{"name":"val name: String","description":"eu.schk.login.nav.Route.PrivacyScreen.name","location":"spezi-feature/login/eu.schk.login.nav/-route/-privacy-screen/name.html","searchKeys":["name","val name: String","eu.schk.login.nav.Route.PrivacyScreen.name"]},{"name":"val name: String","description":"eu.schk.login.nav.Route.SignUpScreen.name","location":"spezi-feature/login/eu.schk.login.nav/-route/-sign-up-screen/name.html","searchKeys":["name","val name: String","eu.schk.login.nav.Route.SignUpScreen.name"]}]